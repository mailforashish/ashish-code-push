trigger:
- master

pr:
- master

variables:
- name: api-level
  value: '27' 
- name: RENDER_API_KEY
  value: ''  # Set this in Render.com environment variables

pool:
  vmImage: 'macOS-12'

stages:
- stage: Test
  jobs:
  - job: TestServer
    displayName: 'Test Server'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'

    - script: |
        cd server
        npm install
        npm test
      displayName: 'Run Server Tests'

  - job: TestAndroid
    timeoutInMinutes: 120
    displayName: 'Test Android'
    steps:
    - script: |
        adb devices
      displayName: 'Start adb server'

    - script: |
        $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-$(api-level);google_apis;x86"
      displayName: 'Download system image'

    - script: |
        $ANDROID_HOME/tools/bin/avdmanager create avd --force --name TestEmulator --abi google_apis/x86 --package 'system-images;android-$(api-level);google_apis;x86' --device "Nexus 6P"
      displayName: 'Creating Android emulator'

    - script: |
        $ANDROID_HOME/emulator/emulator -avd TestEmulator -noaudio -no-window -no-snapshot-save -no-boot-anim -memory 6144 &
      displayName: 'Start Android emulator'

    - script: |
        $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done'
      displayName: 'Wait for emulator to boot'
   
    - script: |
         adb shell settings put global window_animation_scale 0.0    
         adb shell settings put global transition_animation_scale 0.0
         adb shell settings put global animator_duration_scale 0.0   
      displayName: 'Disable animations'
    
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '11'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'
      displayName: 'Change Java version'

    - script: |
        npm install
      displayName: 'Package Installation'

    - script: |
        npm run build:tests && npm run test:setup:android
      displayName: 'Setup Android tests'

    - script: |
        npm run test:fast:android
      displayName: 'Run Android test'

  - job: TestIOS
    timeoutInMinutes: 120
    displayName: 'Test iOS'
    steps:
    - script: |
        npm install
      displayName: 'Install dependencies'

    - script: |
        npm run build:tests && npm run test:setup:ios
      displayName: 'Setup iOS tests'

    - script: |
        npm run test:fast:ios
      displayName: 'Run tests'

- stage: Deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job: DeployToRender
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        curl -X POST "https://api.render.com/deploy/srv-YOUR_SERVICE_ID?key=$(RENDER_API_KEY)"
      displayName: 'Deploy to Render.com'
    
          

